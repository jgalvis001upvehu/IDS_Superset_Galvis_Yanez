version: '3.8'

services:
  # ───────────────────────────── Zookeeper ─────────────────────────────
  zookeeper:
    image: zookeeper:3.4.9
    container_name: zookeeper
    hostname: zookeeper
    restart: unless-stopped
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2888:3888
    networks: [kafka-net]

  # ───────────────────────────── Kafka broker ─────────────────────────────
  kafka:
    image: confluentinc/cp-kafka:5.1.0
    container_name: kafka
    hostname: kafka
    depends_on: [zookeeper]
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks: [kafka-net]

  # ───────────────────────────── Kafka-Connect ─────────────────────────────
  kafka-connect:
    image: confluentinc/cp-kafka-connect:5.1.0
    hostname: kafka-connect
    container_name: kafka-connect
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka:9092"
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_PLUGIN_PATH: '/usr/share/java,/etc/kafka-connect/jars'
      CONNECT_CONFLUENT_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./jars/:/etc/kafka-connect/jars
    networks: [kafka-net]

  # ───────────────────────────── MQTT broker ─────────────────────────────
  mosquitto:
    image: eclipse-mosquitto
    container_name: mosquitto
    ports:
      - "1883:1883"
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
    networks: [kafka-net]

  # ───────────────────────────── Publicador (tweets → MQTT) ─────────────────────────────
  sender:
    build:
      context: ./sender
      dockerfile: Dockerfile_sender
    volumes:
      - ./data:/app/data
    depends_on: [mosquitto]
    networks: [kafka-net]

  # ───────────────────────────── Redis (cache / async para Superset) ─────────────────────────────
  redis:
    image: redis:6.2
    container_name: redis
    ports:
      - "6379:6379"
    networks: [kafka-net]

  # ───────────────────────────── Superset ─────────────────────────────
  superset:
    build:
      context: .
      dockerfile: ./superset/Dockerfile_superset
    container_name: superset
    ports:
      - "8088:8088"
    volumes:
      - ./superset:/app/superset_home
    environment:
      SUPERSET_CONFIG_PATH: /app/superset_home/superset_config.py
      REDIS_URL: redis://redis:6379/0
    depends_on: [kafka-connect, redis]
    networks: [kafka-net]

networks:
  kafka-net:
    name: kafka-net
